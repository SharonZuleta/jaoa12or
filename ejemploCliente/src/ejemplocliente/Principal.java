/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ejemplocliente;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.io.*;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Scanner;

/**
 *
 * @author alejo
 */
public class Principal extends javax.swing.JFrame implements Runnable {

    /**
     * Creates new form Principal
     */
    Cliente cliente = new Cliente();
    private int puerto = 3000;
    
    public Principal() {
        initComponents();
        cliente.setSalida(salidaInfo);
        puertoOrigen.setText(Integer.toString(puerto));
        Thread hilo = new Thread(this);
        hilo.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        entradaInfo = new javax.swing.JTextArea();
        sendInfo = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        salidaInfo = new javax.swing.JTextArea();
        nick = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        puertos = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        puertoOrigen = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        entradaInfo.setColumns(20);
        entradaInfo.setRows(5);
        jScrollPane1.setViewportView(entradaInfo);

        sendInfo.setText("Enviar");
        sendInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendInfoActionPerformed(evt);
            }
        });

        salidaInfo.setEditable(false);
        salidaInfo.setColumns(20);
        salidaInfo.setRows(5);
        jScrollPane2.setViewportView(salidaInfo);

        nick.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nickActionPerformed(evt);
            }
        });

        jLabel1.setText("Nickname");

        jLabel2.setText("Puerto Destino");

        puertoOrigen.setEditable(false);
        puertoOrigen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                puertoOrigenActionPerformed(evt);
            }
        });

        jLabel3.setText("Puerto Origen");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(jScrollPane2)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 143, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(3, 3, 3)
                .addComponent(nick, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addComponent(sendInfo))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(puertos, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(puertoOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nick, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(puertos))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(puertoOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sendInfo)
                .addGap(9, 9, 9))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sendInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendInfoActionPerformed
        // TODO add your handling code here:
        
        try {
            Socket cliente = new Socket("localhost", 1234);            
            
            BufferedReader entrada = new BufferedReader(
                                new InputStreamReader(cliente.getInputStream()));
            PrintWriter salida = new PrintWriter(cliente.getOutputStream());
            
            String mensaje ;
            String nickname;
            String puerto;
            
            do {
                mensaje = entradaInfo.getText();
                nickname = nick.getText();
                puerto = puertos.getText();
                
                salidaInfo.append(nickname+"> "+mensaje+"\n\n");
                salida.println(nickname+"~"+mensaje+"~"+puerto);
                salida.flush(); 
                mensaje ="exit";
                
            } while (!mensaje.equals("exit"));
            
            entrada.close();
            salida.close();
            cliente.close();
            
        } catch (Exception e) {
            System.out.println("Error3: " + e.getMessage());
        }
    }//GEN-LAST:event_sendInfoActionPerformed

    private void nickActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nickActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nickActionPerformed

    private void puertoOrigenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_puertoOrigenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_puertoOrigenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }
    
     @Override
    public void run() {
        try {
            ServerSocket server = new ServerSocket(puerto, 10);
            
            while (true) {
                Socket cliente = server.accept();
                
                BufferedReader entrada = new BufferedReader(
                        new InputStreamReader(cliente.getInputStream()));
                PrintWriter salida = new PrintWriter(cliente.getOutputStream());
                
                String nickname;
                String[] aux;
                nickname = nick.getText();
                String respuesta;
                
                while ((respuesta = entrada.readLine()) != null) {
                    if (!respuesta.equals("next")) {

                        aux = respuesta.split("~");
                        if (!aux[0].equals(nickname)) {
                            salidaInfo.append(aux[0]+"> "+aux[1]+"\n\n");
                        } 

                    }else{
                        break;
                    }
                }
                entrada.close();
                salida.close();
                cliente.close();
                
            }     
            
        }catch (Exception e) {
            System.out.println("Error1: " + e.getMessage());
        } 
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea entradaInfo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField nick;
    private javax.swing.JTextField puertoOrigen;
    private javax.swing.JTextField puertos;
    private javax.swing.JTextArea salidaInfo;
    private javax.swing.JButton sendInfo;
    // End of variables declaration//GEN-END:variables
}
